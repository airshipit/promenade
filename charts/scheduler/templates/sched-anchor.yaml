{{/*
Copyright 2017 AT&T Intellectual Property.  All other rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- $envAll := . }}
{{- $labels := tuple $envAll "kubernetes" "kubernetes-scheduler-anchor" | include "helm-toolkit.snippets.kubernetes_metadata_labels" -}}
---
apiVersion: "apps/v1"
kind: DaemonSet
metadata:
  name: kubernetes-scheduler-anchor
  labels:
{{ $labels | indent 4 }}
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
spec:
  selector:
    matchLabels:
{{ $labels | indent 6 }}
{{ tuple $envAll "scheduler" | include "helm-toolkit.snippets.kubernetes_upgrades_daemonset" | indent 2 }}
  template:
    metadata:
      annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
{{ dict "envAll" $envAll "podName" "scheduler" "containerNames" (list "anchor") | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
      labels:
{{ $labels | indent 8 }}
    spec:
{{ dict "envAll" $envAll "application" "scheduler" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      hostNetwork: true
      dnsPolicy: {{ .Values.anchor.dns_policy }}
      nodeSelector:
        {{ .Values.labels.scheduler.node_selector_key }}: {{ .Values.labels.scheduler.node_selector_value }}
      priorityClassName: system-node-critical
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: CriticalAddonsOnly
          operator: Exists
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.scheduler.timeout }}
      containers:
        - name: anchor
          image: {{ .Values.images.tags.anchor }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          env:
          - name: MANIFEST_PATH
            value: /host{{ .Values.anchor.kubelet.manifest_path }}/kubernetes-scheduler.yaml
          - name: ETC_PATH
            value: /host{{ .Values.scheduler.host_etc_path }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
{{ tuple $envAll $envAll.Values.pod.resources.anchor_daemonset | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "scheduler" "container" "anchor" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - /tmp/bin/anchor
          lifecycle:
            preStop:
              exec:
                command:
                  - /tmp/bin/pre_stop

          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - |-
                grep -q "created-by: ${POD_NAME}" "${MANIFEST_PATH}" || exit 1
                [ "$(curl -k -s -S -o /dev/null \
                    --cert "/host{{ .Values.scheduler.host_etc_path }}/scheduler.pem" \
                    --key "/host{{ .Values.scheduler.host_etc_path }}/scheduler-key.pem" \
                    --cacert "/host{{ .Values.scheduler.host_etc_path }}/cluster-ca.pem" \
                    "https://localhost:{{ .Values.network.kubernetes_scheduler.port }}/healthz" \
                    -w "%{http_code}")" = "200" ]
                exit $?
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5

          volumeMounts:
            - name: bin
              mountPath: /tmp/bin
            - name: etc
              mountPath: /configmap
            - name: host
              mountPath: /host
              mountPropagation: HostToContainer
            - name: secret
              mountPath: /secret
            - name: pod-tmp
              mountPath: /tmp
      terminationGracePeriodSeconds: {{ .Values.anchor.termination_grace_period }}
      volumes:
        - name: bin
          configMap:
            name: kubernetes-scheduler-bin
            defaultMode: 0555
        - name: etc
          configMap:
            name: kubernetes-scheduler-etc
            defaultMode: 0444
        - name: host
          hostPath:
            path: /
        - name: secret
          secret:
            secretName: kubernetes-scheduler
            defaultMode: 0444
        - name: pod-tmp
          emptyDir: {}
